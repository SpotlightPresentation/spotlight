{"ast":null,"code":"var _jsxFileName = \"/Users/eric/projects/spotlight/src/components/display.jsx\";\nimport React, { Component } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\nimport SVG from 'svg.js';\nimport Svg from './svg';\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\n\nfunction drawSVG(SVGs, height, width) {\n  for (let icon of SVGs) {\n    if (icon.startX > icon.endX) {\n      icon.endX = [icon.startX, icon.startX = icon.endX][0];\n    }\n\n    if (icon.startY > icon.endY) {\n      icon.endY = [icon.startY, icon.startY = icon.endY][0];\n    }\n\n    icon.startX = icon.startX / 10000 * width;\n    icon.startY = icon.startY / 10000 * height;\n    icon.endX = icon.endX / 10000 * width;\n    icon.endY = icon.endY / 10000 * height;\n    let draw = SVG('SVG');\n    draw.rect(icon.endX - icon.startX, icon.endY - icon.startY).move(icon.startX, icon.startY).attr({\n      fill: '#f06'\n    });\n  }\n}\n\nexport default class Display extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      SVGs: [{\n        type: 'hilight',\n        startX: 1000,\n        startY: 1000,\n        endX: 2000,\n        endY: 2000\n      }]\n    };\n\n    this.setSVG = () => {\n      let page = document.querySelector('.display canvas');\n      let svg = document.querySelector('#SVG');\n      svg.style.height = page.clientHeight;\n      svg.style.width = page.clientWidth;\n      drawSVG(this.state.SVGs, page.clientHeight, page.clientWidth);\n    };\n  }\n\n  render() {\n    return React.createElement(Document, {\n      className: \"display\",\n      file: this.props.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Page, {\n      onRenderSuccess: this.setSVG,\n      height: window.innerHeight - 150,\n      pageNumber: this.props.pageNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Svg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/eric/projects/spotlight/src/components/display.jsx"],"names":["React","Component","Document","Page","pdfjs","SVG","Svg","GlobalWorkerOptions","workerSrc","version","drawSVG","SVGs","height","width","icon","startX","endX","startY","endY","draw","rect","move","attr","fill","Display","state","type","setSVG","page","document","querySelector","svg","style","clientHeight","clientWidth","render","props","content","window","innerHeight","pageNumber"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { pdfjs } from 'react-pdf';\nimport SVG from 'svg.js';\nimport Svg from './svg';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nfunction drawSVG(SVGs, height, width) {\n\tfor (let icon of SVGs) {\n\t\tif (icon.startX > icon.endX) {\n\t\t\ticon.endX = [ icon.startX, (icon.startX = icon.endX) ][0];\n\t\t}\n\t\tif (icon.startY > icon.endY) {\n\t\t\ticon.endY = [ icon.startY, (icon.startY = icon.endY) ][0];\n\t\t}\n\t\ticon.startX = icon.startX / 10000 * width;\n\t\ticon.startY = icon.startY / 10000 * height;\n\t\ticon.endX = icon.endX / 10000 * width;\n\t\ticon.endY = icon.endY / 10000 * height;\n\t\tlet draw = SVG('SVG');\n\t\tdraw\n\t\t\t.rect(icon.endX - icon.startX, icon.endY - icon.startY)\n\t\t\t.move(icon.startX, icon.startY)\n\t\t\t.attr({ fill: '#f06' });\n\t}\n}\nexport default class Display extends Component {\n\tstate = {\n\t\tSVGs: [ { type: 'hilight', startX: 1000, startY: 1000, endX: 2000, endY: 2000 } ]\n\t};\n\tsetSVG = () => {\n\t\tlet page = document.querySelector('.display canvas');\n\t\tlet svg = document.querySelector('#SVG');\n\t\tsvg.style.height = page.clientHeight;\n\t\tsvg.style.width = page.clientWidth;\n\t\tdrawSVG(this.state.SVGs, page.clientHeight, page.clientWidth);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<Document className=\"display\" file={this.props.content}>\n\t\t\t\t<Page\n\t\t\t\t\tonRenderSuccess={this.setSVG}\n\t\t\t\t\theight={window.innerHeight - 150}\n\t\t\t\t\tpageNumber={this.props.pageNumber}\n\t\t\t\t/>\n\t\t\t\t<Svg />\n\t\t\t</Document>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}