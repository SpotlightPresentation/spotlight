{"ast":null,"code":"var _jsxFileName = \"/Users/eric/projects/spotlight/src/components/drawing.jsx\";\nimport React, { Component } from 'react';\n\nfunction rectFactory(icon, height, width) {}\n\nclass Drawing extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    let divStyle = {\n      height: this.props.height,\n      width: this.props.width\n    };\n    let icons = [];\n\n    for (let icon of this.props.SVGs) {\n      if (icon.startX > icon.endX) {\n        icon.endX = [icon.startX, icon.startX = icon.endX][0];\n      }\n\n      if (icon.startY > icon.endY) {\n        icon.endY = [icon.startY, icon.startY = icon.endY][0];\n      }\n\n      let startX = icon.startX / 10000 * this.props.width;\n      let startY = icon.startY / 10000 * this.props.height;\n      let endX = icon.endX / 10000 * this.props.width;\n      let endY = icon.endY / 10000 * this.props.height;\n      icons.push(React.createElement(\"rect\", {\n        key: Math.random(),\n        x: startX,\n        y: startY,\n        width: endX - startX,\n        height: endY - startY,\n        fill: \"yellow\",\n        opacity: \"0.3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"svg\", {\n      className: \"drawing\",\n      style: divStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, icons);\n  }\n\n}\n\nexport default Drawing;","map":{"version":3,"sources":["/Users/eric/projects/spotlight/src/components/drawing.jsx"],"names":["React","Component","rectFactory","icon","height","width","Drawing","state","render","divStyle","props","icons","SVGs","startX","endX","startY","endY","push","Math","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C,CAAE;;AAC5C,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB,EADuB;AAAA;;AAE/BC,EAAAA,MAAM,GAAG;AACR,QAAIC,QAAQ,GAAG;AACdL,MAAAA,MAAM,EAAE,KAAKM,KAAL,CAAWN,MADL;AAEdC,MAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL;AAFJ,KAAf;AAIA,QAAIM,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIR,IAAT,IAAiB,KAAKO,KAAL,CAAWE,IAA5B,EAAkC;AACjC,UAAIT,IAAI,CAACU,MAAL,GAAcV,IAAI,CAACW,IAAvB,EAA6B;AAC5BX,QAAAA,IAAI,CAACW,IAAL,GAAY,CAAEX,IAAI,CAACU,MAAP,EAAgBV,IAAI,CAACU,MAAL,GAAcV,IAAI,CAACW,IAAnC,EAA2C,CAA3C,CAAZ;AACA;;AACD,UAAIX,IAAI,CAACY,MAAL,GAAcZ,IAAI,CAACa,IAAvB,EAA6B;AAC5Bb,QAAAA,IAAI,CAACa,IAAL,GAAY,CAAEb,IAAI,CAACY,MAAP,EAAgBZ,IAAI,CAACY,MAAL,GAAcZ,IAAI,CAACa,IAAnC,EAA2C,CAA3C,CAAZ;AACA;;AACD,UAAIH,MAAM,GAAGV,IAAI,CAACU,MAAL,GAAc,KAAd,GAAsB,KAAKH,KAAL,CAAWL,KAA9C;AACA,UAAIU,MAAM,GAAGZ,IAAI,CAACY,MAAL,GAAc,KAAd,GAAsB,KAAKL,KAAL,CAAWN,MAA9C;AACA,UAAIU,IAAI,GAAGX,IAAI,CAACW,IAAL,GAAY,KAAZ,GAAoB,KAAKJ,KAAL,CAAWL,KAA1C;AACA,UAAIW,IAAI,GAAGb,IAAI,CAACa,IAAL,GAAY,KAAZ,GAAoB,KAAKN,KAAL,CAAWN,MAA1C;AACAO,MAAAA,KAAK,CAACM,IAAN,CACC;AACC,QAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EADN;AAEC,QAAA,CAAC,EAAEN,MAFJ;AAGC,QAAA,CAAC,EAAEE,MAHJ;AAIC,QAAA,KAAK,EAAED,IAAI,GAAGD,MAJf;AAKC,QAAA,MAAM,EAAEG,IAAI,GAAGD,MALhB;AAMC,QAAA,IAAI,EAAC,QANN;AAOC,QAAA,OAAO,EAAC,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAWA;;AACD,WACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAEN,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEE,KADF,CADD;AAKA;;AApC8B;;AAuChC,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react';\nfunction rectFactory(icon, height, width) {}\nclass Drawing extends Component {\n\tstate = {};\n\trender() {\n\t\tlet divStyle = {\n\t\t\theight: this.props.height,\n\t\t\twidth: this.props.width\n\t\t};\n\t\tlet icons = [];\n\t\tfor (let icon of this.props.SVGs) {\n\t\t\tif (icon.startX > icon.endX) {\n\t\t\t\ticon.endX = [ icon.startX, (icon.startX = icon.endX) ][0];\n\t\t\t}\n\t\t\tif (icon.startY > icon.endY) {\n\t\t\t\ticon.endY = [ icon.startY, (icon.startY = icon.endY) ][0];\n\t\t\t}\n\t\t\tlet startX = icon.startX / 10000 * this.props.width;\n\t\t\tlet startY = icon.startY / 10000 * this.props.height;\n\t\t\tlet endX = icon.endX / 10000 * this.props.width;\n\t\t\tlet endY = icon.endY / 10000 * this.props.height;\n\t\t\ticons.push(\n\t\t\t\t<rect\n\t\t\t\t\tkey={Math.random()}\n\t\t\t\t\tx={startX}\n\t\t\t\t\ty={startY}\n\t\t\t\t\twidth={endX - startX}\n\t\t\t\t\theight={endY - startY}\n\t\t\t\t\tfill=\"yellow\"\n\t\t\t\t\topacity=\"0.3\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<svg className=\"drawing\" style={divStyle}>\n\t\t\t\t{icons}\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\nexport default Drawing;\n"]},"metadata":{},"sourceType":"module"}