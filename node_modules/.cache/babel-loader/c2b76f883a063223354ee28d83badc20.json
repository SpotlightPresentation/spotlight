{"ast":null,"code":"var _jsxFileName = \"/Users/eric/projects/spotlight/src/components/factory.jsx\";\nimport React, { Component } from 'react';\nexport default function (icon, height, width) {\n  if (icon.type === 'hilight') {\n    let startX = icon.startX / 10000 * width;\n    let startY = icon.startY / 10000 * height;\n    let endX = icon.endX / 10000 * width;\n    let endY = icon.endY / 10000 * height;\n\n    if (icon.startX > icon.endX) {\n      icon.endX = [icon.startX, icon.startX = icon.endX][0];\n    }\n\n    if (icon.startY > icon.endY) {\n      icon.endY = [icon.startY, icon.startY = icon.endY][0];\n    }\n\n    return React.createElement(\"rect\", {\n      key: Math.random(),\n      x: startX,\n      y: startY,\n      width: endX - startX,\n      height: endY - startY,\n      fill: \"yellow\",\n      opacity: \"0.3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  } else if (icon.type === 'arrow') {\n    let startX = icon.startX / 10000 * width;\n    let startY = icon.startY / 10000 * height;\n    let endX = icon.endX / 10000 * width;\n    let endY = icon.endY / 10000 * height;\n    return React.createElement(\"line\", {\n      key: Math.random(),\n      x1: startX,\n      y1: startY,\n      x2: endX,\n      y2: endY,\n      stroke: \"red\",\n      strokeWidth: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n}","map":{"version":3,"sources":["/Users/eric/projects/spotlight/src/components/factory.jsx"],"names":["React","Component","icon","height","width","type","startX","startY","endX","endY","Math","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,eAAe,UAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8B;AAC5C,MAAIF,IAAI,CAACG,IAAL,KAAc,SAAlB,EAA6B;AAC5B,QAAIC,MAAM,GAAGJ,IAAI,CAACI,MAAL,GAAc,KAAd,GAAsBF,KAAnC;AACA,QAAIG,MAAM,GAAGL,IAAI,CAACK,MAAL,GAAc,KAAd,GAAsBJ,MAAnC;AACA,QAAIK,IAAI,GAAGN,IAAI,CAACM,IAAL,GAAY,KAAZ,GAAoBJ,KAA/B;AACA,QAAIK,IAAI,GAAGP,IAAI,CAACO,IAAL,GAAY,KAAZ,GAAoBN,MAA/B;;AACA,QAAID,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACM,IAAvB,EAA6B;AAC5BN,MAAAA,IAAI,CAACM,IAAL,GAAY,CAAEN,IAAI,CAACI,MAAP,EAAgBJ,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACM,IAAnC,EAA2C,CAA3C,CAAZ;AACA;;AACD,QAAIN,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACO,IAAvB,EAA6B;AAC5BP,MAAAA,IAAI,CAACO,IAAL,GAAY,CAAEP,IAAI,CAACK,MAAP,EAAgBL,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACO,IAAnC,EAA2C,CAA3C,CAAZ;AACA;;AAED,WACC;AACC,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EADN;AAEC,MAAA,CAAC,EAAEL,MAFJ;AAGC,MAAA,CAAC,EAAEC,MAHJ;AAIC,MAAA,KAAK,EAAEC,IAAI,GAAGF,MAJf;AAKC,MAAA,MAAM,EAAEG,IAAI,GAAGF,MALhB;AAMC,MAAA,IAAI,EAAC,QANN;AAOC,MAAA,OAAO,EAAC,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAWA,GAvBD,MAuBO,IAAIL,IAAI,CAACG,IAAL,KAAc,OAAlB,EAA2B;AACjC,QAAIC,MAAM,GAAGJ,IAAI,CAACI,MAAL,GAAc,KAAd,GAAsBF,KAAnC;AACA,QAAIG,MAAM,GAAGL,IAAI,CAACK,MAAL,GAAc,KAAd,GAAsBJ,MAAnC;AACA,QAAIK,IAAI,GAAGN,IAAI,CAACM,IAAL,GAAY,KAAZ,GAAoBJ,KAA/B;AACA,QAAIK,IAAI,GAAGP,IAAI,CAACO,IAAL,GAAY,KAAZ,GAAoBN,MAA/B;AACA,WAAO;AAAM,MAAA,GAAG,EAAEO,IAAI,CAACC,MAAL,EAAX;AAA0B,MAAA,EAAE,EAAEL,MAA9B;AAAsC,MAAA,EAAE,EAAEC,MAA1C;AAAkD,MAAA,EAAE,EAAEC,IAAtD;AAA4D,MAAA,EAAE,EAAEC,IAAhE;AAAsE,MAAA,MAAM,EAAC,KAA7E;AAAmF,MAAA,WAAW,EAAE,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;AACD","sourcesContent":["import React, { Component } from 'react';\nexport default function(icon, height, width) {\n\tif (icon.type === 'hilight') {\n\t\tlet startX = icon.startX / 10000 * width;\n\t\tlet startY = icon.startY / 10000 * height;\n\t\tlet endX = icon.endX / 10000 * width;\n\t\tlet endY = icon.endY / 10000 * height;\n\t\tif (icon.startX > icon.endX) {\n\t\t\ticon.endX = [ icon.startX, (icon.startX = icon.endX) ][0];\n\t\t}\n\t\tif (icon.startY > icon.endY) {\n\t\t\ticon.endY = [ icon.startY, (icon.startY = icon.endY) ][0];\n\t\t}\n\n\t\treturn (\n\t\t\t<rect\n\t\t\t\tkey={Math.random()}\n\t\t\t\tx={startX}\n\t\t\t\ty={startY}\n\t\t\t\twidth={endX - startX}\n\t\t\t\theight={endY - startY}\n\t\t\t\tfill=\"yellow\"\n\t\t\t\topacity=\"0.3\"\n\t\t\t/>\n\t\t);\n\t} else if (icon.type === 'arrow') {\n\t\tlet startX = icon.startX / 10000 * width;\n\t\tlet startY = icon.startY / 10000 * height;\n\t\tlet endX = icon.endX / 10000 * width;\n\t\tlet endY = icon.endY / 10000 * height;\n\t\treturn <line key={Math.random()} x1={startX} y1={startY} x2={endX} y2={endY} stroke=\"red\" strokeWidth={5} />;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}